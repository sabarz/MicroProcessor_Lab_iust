;// Saba Razi
;// 99521316
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;
;unsigned int my_hour = 23;
;unsigned int my_minute = 58;
;unsigned int my_second = 0;
;unsigned int my_ms = 0;
;
;unsigned char int_to_char_custom(unsigned int x) {
; 0000 000D unsigned char int_to_char_custom(unsigned int x) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000E     return x + '0';
;PCODE: $0000000F VOL: 0
;	x -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 000F }
;PCODE: $00000014 VOL: 0
;
;void display_on_lcd(int value, int column) {
; 0000 0011 void display_on_lcd(int value, int column) {
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0012     unsigned int row = 1;
; 0000 0013     unsigned char tens = int_to_char_custom(value / 10);
; 0000 0014     unsigned char ones = int_to_char_custom(value % 10);
; 0000 0015     lcd_gotoxy(column, row);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;	value -> Y+6
;	column -> Y+4
;	row -> R16,R17
;	tens -> R19
;	ones -> R18
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0016     lcd_putchar(tens);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0017     lcd_gotoxy(column + 1, row);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0018     lcd_putchar(ones);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0019 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;
;interrupt [TIM1_COMPA] void timer1_compa_isr_custom(void) {
; 0000 001B interrupt [8] void timer1_compa_isr_custom(void) {
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 001C     my_ms += 1;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 001D 
; 0000 001E     if (my_ms == 10) {
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 001F         my_ms = 0;
;PCODE: $00000040 VOL: 0
; 0000 0020         my_second += 1;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0021 
; 0000 0022         if (my_second == 60) {
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0023             my_second = 0;
;PCODE: $00000047 VOL: 0
; 0000 0024             my_minute += 1;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0025 
; 0000 0026             if (my_minute == 60) {
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0027                 my_minute = 0;
;PCODE: $0000004E VOL: 0
; 0000 0028                 my_hour += 1;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0029 
; 0000 002A                 if (my_hour == 24) {
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 002B                     my_hour = 0;
;PCODE: $00000055 VOL: 0
; 0000 002C                 }
; 0000 002D             }
;PCODE: $00000056 VOL: 0
; 0000 002E         }
;PCODE: $00000057 VOL: 0
; 0000 002F     }
;PCODE: $00000058 VOL: 0
; 0000 0030 }
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;
;void main(void) {
; 0000 0032 void main(void) {
;PCODE: $0000005D VOL: 0
; 0000 0033     PORTA=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0034     DDRA=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0035     PORTB=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0036     DDRB=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0037     PORTC=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0038     DDRC=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0039     PORTD=0x00;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 003A     DDRD=0x00;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 003B 
; 0000 003C     TCCR1A = 0x00;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 003D     TCCR1B = 0x0C;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 003E     TCNT1H = 0x00;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 003F     TCNT1L = 0x00;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0040     ICR1H = 0x00;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0041     ICR1L = 0x00;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0042     OCR1AH = 0x0C;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0043     OCR1AL = 0x35;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0044     OCR1BH = 0x00;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0045     OCR1BL = 0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0046     TIMSK = 0x12;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0047 
; 0000 0048     lcd_init(16);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0049     lcd_gotoxy(4, 0);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 004A     lcd_puts("LCD Clock");
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 004B 
; 0000 004C     #asm("sei")
;PCODE: $0000008D VOL: 0
	sei
;PCODE: $0000008E VOL: 0
; 0000 004D 
; 0000 004E     while (1) {
;PCODE: $0000008F VOL: 0
; 0000 004F         display_on_lcd(my_hour, 3);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0050         lcd_gotoxy(5, 1);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0051         lcd_puts(":");
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0052 
; 0000 0053         display_on_lcd(my_minute, 6);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0054         lcd_gotoxy(8, 1);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0055         lcd_puts(":");
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0056 
; 0000 0057         display_on_lcd(my_second, 9);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0058         lcd_gotoxy(11, 1);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0059         lcd_puts(":");
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 005A 
; 0000 005B         lcd_gotoxy(12, 1);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 005C         lcd_putchar(int_to_char_custom(my_ms));
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 005D     }
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 005E }
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0

	.DSEG
_0x7:
	.BYTE 0x10
