
AVRASM ver. 2.1.30  E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm Sun May 12 10:10:19 2024

E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1088): warning: Register r5 already defined by the .DEF directive
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1089): warning: Register r4 already defined by the .DEF directive
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1090): warning: Register r7 already defined by the .DEF directive
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1091): warning: Register r6 already defined by the .DEF directive
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1092): warning: Register r9 already defined by the .DEF directive
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1093): warning: Register r8 already defined by the .DEF directive
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1094): warning: Register r11 already defined by the .DEF directive
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1095): warning: Register r12 already defined by the .DEF directive
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1096): warning: Register r13 already defined by the .DEF directive
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1097): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __hour=R5
                 	.DEF __min=R4
                 	.DEF __sec=R7
                 	.DEF _week_day=R6
                 	.DEF __day=R9
                 	.DEF __month=R8
                 	.DEF __year=R11
                 	.DEF _s1=R12
                 	.DEF _s1_msb=R13
                 	.DEF __lcd_x=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 4954
00002b 454d
00002c 203e
00002d 4400      	.DB  0x54,0x49,0x4D,0x45,0x3E,0x20,0x0,0x44
00002e 5441
00002f 3e45
000030 0020
000031 3032      	.DB  0x41,0x54,0x45,0x3E,0x20,0x0,0x32,0x30
000032 5300
000033 6261
000034 2061
000035 6152      	.DB  0x0,0x53,0x61,0x62,0x61,0x20,0x52,0x61
000036 697a
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1132): warning: .cseg .db misalignment - padding zero byte
000037 0000      	.DB  0x7A,0x69,0x0
                 _0x2020003:
000038 c080      	.DB  0x80,0xC0
                 _0x2040060:
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1136): warning: .cseg .db misalignment - padding zero byte
000039 0001      	.DB  0x1
                 _0x2040000:
00003a 4e2d
00003b 4e41
00003c 4900
00003d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\saba folder\univercity\term 8 4022\Micro Lab\11\11\List\A11.asm(1139): warning: .cseg .db misalignment - padding zero byte
00003e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00003f 0007      	.DW  0x07
000040 0260      	.DW  _0x6
000041 0054      	.DW  _0x0*2
                 
000042 0007      	.DW  0x07
000043 0267      	.DW  _0x6+7
000044 005b      	.DW  _0x0*2+7
                 
000045 0002      	.DW  0x02
000046 0278      	.DW  __base_y_G101
000047 0070      	.DW  _0x2020003*2
                 
000048 0001      	.DW  0x01
000049 027e      	.DW  __seed_G102
00004a 0072      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00004b 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004c 94f8      	CLI
00004d 27ee      	CLR  R30
00004e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004f e0f1      	LDI  R31,1
000050 bffb      	OUT  GICR,R31
000051 bfeb      	OUT  GICR,R30
000052 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000053 e1f8      	LDI  R31,0x18
000054 bdf1      	OUT  WDTCR,R31
000055 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000056 e08d      	LDI  R24,(14-2)+1
000057 e0a2      	LDI  R26,2
000058 27bb      	CLR  R27
                 __CLEAR_REG:
000059 93ed      	ST   X+,R30
00005a 958a      	DEC  R24
00005b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005d e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005e e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005f 93ed      	ST   X+,R30
000060 9701      	SBIW R24,1
000061 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000062 e7ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000063 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000064 9185      	LPM  R24,Z+
000065 9195      	LPM  R25,Z+
000066 9700      	SBIW R24,0
000067 f061      	BREQ __GLOBAL_INI_END
000068 91a5      	LPM  R26,Z+
000069 91b5      	LPM  R27,Z+
00006a 9005      	LPM  R0,Z+
00006b 9015      	LPM  R1,Z+
00006c 01bf      	MOVW R22,R30
00006d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006e 9005      	LPM  R0,Z+
00006f 920d      	ST   X+,R0
000070 9701      	SBIW R24,1
000071 f7e1      	BRNE __GLOBAL_INI_LOOP
000072 01fb      	MOVW R30,R22
000073 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000074 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000075 bfed      	OUT  SPL,R30
000076 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000077 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000078 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000079 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007a 940c 007c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;// Saba Razi
                 ;// 99521316
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <i2c.h>
                 ;#include <ds1307.h>
                 ;#include <alcd.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;
                 ;unsigned char _hour, _min, _sec;
                 ;unsigned char week_day, _day,_month,_year;
                 ;unsigned char* s1;
                 ;unsigned char* s2;
                 ;unsigned char* s3;
                 ;unsigned char* s4;
                 ;unsigned char* s5;
                 ;unsigned char* s6;
                 ;
                 ;void main(void) {
                 ; 0000 0014 void main(void) {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0015 	PORTA = 0x00;
00007c e0e0      	LDI  R30,LOW(0)
00007d bbeb      	OUT  0x1B,R30
                 ; 0000 0016 	DDRA = 0x00;
00007e bbea      	OUT  0x1A,R30
                 ; 0000 0017 	PORTB = 0x00;
00007f bbe8      	OUT  0x18,R30
                 ; 0000 0018 	DDRB = 0x00;
000080 bbe7      	OUT  0x17,R30
                 ; 0000 0019 	PORTC = 0x00;
000081 bbe5      	OUT  0x15,R30
                 ; 0000 001A 	DDRC = 0x00;
000082 bbe4      	OUT  0x14,R30
                 ; 0000 001B 	PORTD = 0x00;
000083 bbe2      	OUT  0x12,R30
                 ; 0000 001C 	DDRD = 0x00;
000084 bbe1      	OUT  0x11,R30
                 ; 0000 001D 
                 ; 0000 001E 	i2c_init();
000085 940e 028a 	CALL _i2c_init
                 ; 0000 001F 	rtc_init(0, 0, 0);
000087 e0e0      	LDI  R30,LOW(0)
000088 93ea      	ST   -Y,R30
000089 93ea      	ST   -Y,R30
00008a e0a0      	LDI  R26,LOW(0)
00008b d097      	RCALL _rtc_init
                 ; 0000 0020 	lcd_init(20);
00008c e1a4      	LDI  R26,LOW(20)
00008d d15a      	RCALL _lcd_init
                 ; 0000 0021 
                 ; 0000 0022 	while (1) {
                 _0x3:
                 ; 0000 0023 		lcd_clear();
00008e d110      	RCALL _lcd_clear
                 ; 0000 0024 
                 ; 0000 0025 		//lcd_gotoxy(0, 0);
                 ; 0000 0026 		lcd_puts("TIME> ");
                +
00008f e6a0     +LDI R26 , LOW ( _0x6 + ( 0 ) )
000090 e0b2     +LDI R27 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW2MN _0x6,0
000091 d134      	RCALL _lcd_puts
                 ; 0000 0027 		lcd_gotoxy(0, 1);
000092 e0e0      	LDI  R30,LOW(0)
000093 93ea      	ST   -Y,R30
000094 e0a1      	LDI  R26,LOW(1)
000095 d0fa      	RCALL _lcd_gotoxy
                 ; 0000 0028 		lcd_puts("DATE> ");
                +
000096 e6a7     +LDI R26 , LOW ( _0x6 + ( 7 ) )
000097 e0b2     +LDI R27 , HIGH ( _0x6 + ( 7 ) )
                 	__POINTW2MN _0x6,7
000098 d12d      	RCALL _lcd_puts
                 ; 0000 0029 
                 ; 0000 002A 		rtc_get_time(&_hour, &_min, &_sec);
000099 e0e5      	LDI  R30,LOW(5)
00009a e0f0      	LDI  R31,HIGH(5)
00009b 93fa      	ST   -Y,R31
00009c 93ea      	ST   -Y,R30
00009d e0e4      	LDI  R30,LOW(4)
00009e e0f0      	LDI  R31,HIGH(4)
00009f 93fa      	ST   -Y,R31
0000a0 93ea      	ST   -Y,R30
0000a1 e0a7      	LDI  R26,LOW(7)
0000a2 e0b0      	LDI  R27,HIGH(7)
0000a3 d098      	RCALL _rtc_get_time
                 ; 0000 002B 		rtc_get_date(&week_day, &_day, &_month, &_year);
0000a4 e0e6      	LDI  R30,LOW(6)
0000a5 e0f0      	LDI  R31,HIGH(6)
0000a6 93fa      	ST   -Y,R31
0000a7 93ea      	ST   -Y,R30
0000a8 e0e9      	LDI  R30,LOW(9)
0000a9 e0f0      	LDI  R31,HIGH(9)
0000aa 93fa      	ST   -Y,R31
0000ab 93ea      	ST   -Y,R30
0000ac e0e8      	LDI  R30,LOW(8)
0000ad e0f0      	LDI  R31,HIGH(8)
0000ae 93fa      	ST   -Y,R31
0000af 93ea      	ST   -Y,R30
0000b0 e0ab      	LDI  R26,LOW(11)
0000b1 e0b0      	LDI  R27,HIGH(11)
0000b2 d0a2      	RCALL _rtc_get_date
                 ; 0000 002C 
                 ; 0000 002D 		lcd_gotoxy(6, 0);
0000b3 e0e6      	LDI  R30,LOW(6)
0000b4 93ea      	ST   -Y,R30
0000b5 e0a0      	LDI  R26,LOW(0)
0000b6 d0d9      	RCALL _lcd_gotoxy
                 ; 0000 002E 
                 ; 0000 002F 		itoa(_hour, s1);
0000b7 2de5      	MOV  R30,R5
0000b8 e0f0      	LDI  R31,0
0000b9 93fa      	ST   -Y,R31
0000ba 93ea      	ST   -Y,R30
0000bb 01d6      	MOVW R26,R12
0000bc 940e 0217 	CALL _itoa
                 ; 0000 0030 		lcd_puts(s1);
0000be 01d6      	MOVW R26,R12
0000bf 940e 0252 	CALL SUBOPT_0x0
                 ; 0000 0031 		lcd_putsf(" ");
                 ; 0000 0032 
                 ; 0000 0033 		itoa(_min, s2);
0000c1 2de4      	MOV  R30,R4
0000c2 e0f0      	LDI  R31,0
0000c3 93fa      	ST   -Y,R31
0000c4 93ea      	ST   -Y,R30
0000c5 91a0 026e 	LDS  R26,_s2
0000c7 91b0 026f 	LDS  R27,_s2+1
0000c9 940e 0217 	CALL _itoa
                 ; 0000 0034 		lcd_puts(s2);
0000cb 91a0 026e 	LDS  R26,_s2
0000cd 91b0 026f 	LDS  R27,_s2+1
0000cf 940e 0252 	CALL SUBOPT_0x0
                 ; 0000 0035 		lcd_putsf(" ");
                 ; 0000 0036 
                 ; 0000 0037 		itoa(_sec, s3);
0000d1 2de7      	MOV  R30,R7
0000d2 e0f0      	LDI  R31,0
0000d3 93fa      	ST   -Y,R31
0000d4 93ea      	ST   -Y,R30
0000d5 91a0 0270 	LDS  R26,_s3
0000d7 91b0 0271 	LDS  R27,_s3+1
0000d9 940e 0217 	CALL _itoa
                 ; 0000 0038 		lcd_puts(s3);
0000db 91a0 0270 	LDS  R26,_s3
0000dd 91b0 0271 	LDS  R27,_s3+1
0000df d0e6      	RCALL _lcd_puts
                 ; 0000 0039 
                 ; 0000 003A 		lcd_gotoxy(6, 1);
0000e0 e0e6      	LDI  R30,LOW(6)
0000e1 93ea      	ST   -Y,R30
0000e2 e0a1      	LDI  R26,LOW(1)
0000e3 d0ac      	RCALL _lcd_gotoxy
                 ; 0000 003B 
                 ; 0000 003C 		itoa(_day, s4);
0000e4 2de9      	MOV  R30,R9
0000e5 e0f0      	LDI  R31,0
0000e6 93fa      	ST   -Y,R31
0000e7 93ea      	ST   -Y,R30
0000e8 91a0 0272 	LDS  R26,_s4
0000ea 91b0 0273 	LDS  R27,_s4+1
0000ec 940e 0217 	CALL _itoa
                 ; 0000 003D 		lcd_puts(s4);
0000ee 91a0 0272 	LDS  R26,_s4
0000f0 91b0 0273 	LDS  R27,_s4+1
0000f2 940e 0252 	CALL SUBOPT_0x0
                 ; 0000 003E 		lcd_putsf(" ");
                 ; 0000 003F 
                 ; 0000 0040 		itoa(_month, s5);
0000f4 2de8      	MOV  R30,R8
0000f5 e0f0      	LDI  R31,0
0000f6 93fa      	ST   -Y,R31
0000f7 93ea      	ST   -Y,R30
0000f8 91a0 0274 	LDS  R26,_s5
0000fa 91b0 0275 	LDS  R27,_s5+1
0000fc 940e 0217 	CALL _itoa
                 ; 0000 0041 		lcd_puts(s5);
0000fe 91a0 0274 	LDS  R26,_s5
000100 91b0 0275 	LDS  R27,_s5+1
000102 940e 0252 	CALL SUBOPT_0x0
                 ; 0000 0042 		lcd_putsf(" ");
                 ; 0000 0043 
                 ; 0000 0044 		lcd_putsf("20");
                +
000104 e6a2     +LDI R26 , LOW ( 2 * _0x0 + ( 14 ) )
000105 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW2FN _0x0,14
000106 d0ce      	RCALL _lcd_putsf
                 ; 0000 0045 		itoa(_year, s6);
000107 2deb      	MOV  R30,R11
000108 e0f0      	LDI  R31,0
000109 93fa      	ST   -Y,R31
00010a 93ea      	ST   -Y,R30
00010b 91a0 0276 	LDS  R26,_s6
00010d 91b0 0277 	LDS  R27,_s6+1
00010f 940e 0217 	CALL _itoa
                 ; 0000 0046 		lcd_puts(s6);
000111 91a0 0276 	LDS  R26,_s6
000113 91b0 0277 	LDS  R27,_s6+1
000115 d0b0      	RCALL _lcd_puts
                 ; 0000 0047 
                 ; 0000 0048 		lcd_gotoxy(0, 2);
000116 e0e0      	LDI  R30,LOW(0)
000117 93ea      	ST   -Y,R30
000118 e0a2      	LDI  R26,LOW(2)
000119 d076      	RCALL _lcd_gotoxy
                 ; 0000 0049         lcd_putsf("Saba Razi");
                +
00011a e6a5     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
00011b e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
00011c d0b8      	RCALL _lcd_putsf
                 ; 0000 004A 
                 ; 0000 004B         delay_ms(1000);
00011d eea8      	LDI  R26,LOW(1000)
00011e e0b3      	LDI  R27,HIGH(1000)
00011f 940e 02db 	CALL _delay_ms
                 ; 0000 004C     }
000121 cf6c      	RJMP _0x3
                 ; 0000 004D }
                 _0x7:
000122 cfff      	RJMP _0x7
                 ; .FEND
                 
                 	.DSEG
                 _0x6:
000260           	.BYTE 0xE
                 
                 	.CSEG
                 _rtc_init:
                 ; .FSTART _rtc_init
000123 93aa      	ST   -Y,R26
000124 81ea      	LDD  R30,Y+2
000125 70e3      	ANDI R30,LOW(0x3)
000126 83ea      	STD  Y+2,R30
000127 81e9      	LDD  R30,Y+1
000128 30e0      	CPI  R30,0
000129 f019      	BREQ _0x2000003
00012a 81ea      	LDD  R30,Y+2
00012b 61e0      	ORI  R30,0x10
00012c 83ea      	STD  Y+2,R30
                 _0x2000003:
00012d 81e8      	LD   R30,Y
00012e 30e0      	CPI  R30,0
00012f f019      	BREQ _0x2000004
000130 81ea      	LDD  R30,Y+2
000131 68e0      	ORI  R30,0x80
000132 83ea      	STD  Y+2,R30
                 _0x2000004:
000133 940e 0258 	CALL SUBOPT_0x1
000135 e0a7      	LDI  R26,LOW(7)
000136 940e 02c3 	CALL _i2c_write
000138 81aa      	LDD  R26,Y+2
000139 940e 025d 	CALL SUBOPT_0x2
00013b c0aa      	RJMP _0x20E0003
                 ; .FEND
                 _rtc_get_time:
                 ; .FSTART _rtc_get_time
00013c 93ba      	ST   -Y,R27
00013d 93aa      	ST   -Y,R26
00013e 940e 0258 	CALL SUBOPT_0x1
000140 e0a0      	LDI  R26,LOW(0)
000141 940e 025d 	CALL SUBOPT_0x2
000143 940e 0261 	CALL SUBOPT_0x3
000145 940e 0269 	CALL SUBOPT_0x4
000147 940e 0270 	CALL SUBOPT_0x5
000149 940e 0276 	CALL SUBOPT_0x6
00014b 2fae      	MOV  R26,R30
00014c 940e 0245 	CALL _bcd2bin
00014e 81ac      	LDD  R26,Y+4
00014f 81bd      	LDD  R27,Y+4+1
000150 93ec      	ST   X,R30
000151 940e 029e 	CALL _i2c_stop
000153 9626      	ADIW R28,6
000154 9508      	RET
                 ; .FEND
                 _rtc_get_date:
                 ; .FSTART _rtc_get_date
000155 93ba      	ST   -Y,R27
000156 93aa      	ST   -Y,R26
000157 940e 0258 	CALL SUBOPT_0x1
000159 e0a3      	LDI  R26,LOW(3)
00015a 940e 025d 	CALL SUBOPT_0x2
00015c 940e 0261 	CALL SUBOPT_0x3
00015e 81ae      	LDD  R26,Y+6
00015f 81bf      	LDD  R27,Y+6+1
000160 93ec      	ST   X,R30
000161 940e 0270 	CALL SUBOPT_0x5
000163 81ac      	LDD  R26,Y+4
000164 81bd      	LDD  R27,Y+4+1
000165 93ec      	ST   X,R30
000166 940e 0270 	CALL SUBOPT_0x5
000168 940e 0276 	CALL SUBOPT_0x6
00016a 940e 0269 	CALL SUBOPT_0x4
00016c 940e 029e 	CALL _i2c_stop
00016e 9628      	ADIW R28,8
00016f 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000170 93aa      	ST   -Y,R26
000171 b3eb      	IN   R30,0x1B
000172 70ef      	ANDI R30,LOW(0xF)
000173 2fae      	MOV  R26,R30
000174 81e8      	LD   R30,Y
000175 7fe0      	ANDI R30,LOW(0xF0)
000176 2bea      	OR   R30,R26
000177 bbeb      	OUT  0x1B,R30
                +
000178 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000179 958a     +DEC R24
00017a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00017b 9ada      	SBI  0x1B,2
                +
00017c e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00017d 958a     +DEC R24
00017e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00017f 98da      	CBI  0x1B,2
                +
000180 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000181 958a     +DEC R24
000182 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000183 c091      	RJMP _0x20E0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000184 93aa      	ST   -Y,R26
000185 81a8      	LD   R26,Y
000186 dfe9      	RCALL __lcd_write_nibble_G101
000187 81e8          ld    r30,y
000188 95e2          swap  r30
000189 83e8          st    y,r30
00018a 81a8      	LD   R26,Y
00018b dfe4      	RCALL __lcd_write_nibble_G101
                +
00018c e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00018d 958a     +DEC R24
00018e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00018f c085      	RJMP _0x20E0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000190 93aa      	ST   -Y,R26
000191 81e8      	LD   R30,Y
000192 e0f0      	LDI  R31,0
000193 58e8      	SUBI R30,LOW(-__base_y_G101)
000194 4ffd      	SBCI R31,HIGH(-__base_y_G101)
000195 81e0      	LD   R30,Z
000196 81a9      	LDD  R26,Y+1
000197 0fae      	ADD  R26,R30
000198 dfeb      	RCALL __lcd_write_data
000199 80a9      	LDD  R10,Y+1
00019a 81e8      	LD   R30,Y
00019b 93e0 027c 	STS  __lcd_y,R30
00019d 9622      	ADIW R28,2
00019e 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00019f e0a2      	LDI  R26,LOW(2)
0001a0 940e 027c 	CALL SUBOPT_0x7
0001a2 e0ac      	LDI  R26,LOW(12)
0001a3 dfe0      	RCALL __lcd_write_data
0001a4 e0a1      	LDI  R26,LOW(1)
0001a5 940e 027c 	CALL SUBOPT_0x7
0001a7 e0e0      	LDI  R30,LOW(0)
0001a8 93e0 027c 	STS  __lcd_y,R30
0001aa 2eae      	MOV  R10,R30
0001ab 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001ac 93aa      	ST   -Y,R26
0001ad 81a8      	LD   R26,Y
0001ae 30aa      	CPI  R26,LOW(0xA)
0001af f021      	BREQ _0x2020005
0001b0 91e0 027d 	LDS  R30,__lcd_maxx
0001b2 16ae      	CP   R10,R30
0001b3 f060      	BRLO _0x2020004
                 _0x2020005:
0001b4 e0e0      	LDI  R30,LOW(0)
0001b5 93ea      	ST   -Y,R30
0001b6 91a0 027c 	LDS  R26,__lcd_y
0001b8 5faf      	SUBI R26,-LOW(1)
0001b9 93a0 027c 	STS  __lcd_y,R26
0001bb dfd4      	RCALL _lcd_gotoxy
0001bc 81a8      	LD   R26,Y
0001bd 30aa      	CPI  R26,LOW(0xA)
0001be f409      	BRNE _0x2020007
0001bf c055      	RJMP _0x20E0001
                 _0x2020007:
                 _0x2020004:
0001c0 94a3      	INC  R10
0001c1 9ad8      	SBI  0x1B,0
0001c2 81a8      	LD   R26,Y
0001c3 dfc0      	RCALL __lcd_write_data
0001c4 98d8      	CBI  0x1B,0
0001c5 c04f      	RJMP _0x20E0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001c6 93ba      	ST   -Y,R27
0001c7 93aa      	ST   -Y,R26
0001c8 931a      	ST   -Y,R17
                 _0x2020008:
0001c9 81a9      	LDD  R26,Y+1
0001ca 81ba      	LDD  R27,Y+1+1
0001cb 91ed      	LD   R30,X+
0001cc 83a9      	STD  Y+1,R26
0001cd 83ba      	STD  Y+1+1,R27
0001ce 2f1e      	MOV  R17,R30
0001cf 30e0      	CPI  R30,0
0001d0 f019      	BREQ _0x202000A
0001d1 2fa1      	MOV  R26,R17
0001d2 dfd9      	RCALL _lcd_putchar
0001d3 cff5      	RJMP _0x2020008
                 _0x202000A:
0001d4 c010      	RJMP _0x20E0002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0001d5 93ba      	ST   -Y,R27
0001d6 93aa      	ST   -Y,R26
0001d7 931a      	ST   -Y,R17
                 _0x202000B:
0001d8 81e9      	LDD  R30,Y+1
0001d9 81fa      	LDD  R31,Y+1+1
0001da 9631      	ADIW R30,1
0001db 83e9      	STD  Y+1,R30
0001dc 83fa      	STD  Y+1+1,R31
0001dd 9731      	SBIW R30,1
0001de 91e4      	LPM  R30,Z
0001df 2f1e      	MOV  R17,R30
0001e0 30e0      	CPI  R30,0
0001e1 f019      	BREQ _0x202000D
0001e2 2fa1      	MOV  R26,R17
0001e3 dfc8      	RCALL _lcd_putchar
0001e4 cff3      	RJMP _0x202000B
                 _0x202000D:
                 _0x20E0002:
0001e5 8118      	LDD  R17,Y+0
                 _0x20E0003:
0001e6 9623      	ADIW R28,3
0001e7 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001e8 93aa      	ST   -Y,R26
0001e9 b3ea      	IN   R30,0x1A
0001ea 6fe0      	ORI  R30,LOW(0xF0)
0001eb bbea      	OUT  0x1A,R30
0001ec 9ad2      	SBI  0x1A,2
0001ed 9ad0      	SBI  0x1A,0
0001ee 9ad1      	SBI  0x1A,1
0001ef 98da      	CBI  0x1B,2
0001f0 98d8      	CBI  0x1B,0
0001f1 98d9      	CBI  0x1B,1
0001f2 81e8      	LD   R30,Y
0001f3 93e0 027d 	STS  __lcd_maxx,R30
0001f5 58e0      	SUBI R30,-LOW(128)
                +
0001f6 93e0 027a+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0001f8 81e8      	LD   R30,Y
0001f9 54e0      	SUBI R30,-LOW(192)
                +
0001fa 93e0 027b+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0001fc e1a4      	LDI  R26,LOW(20)
0001fd e0b0      	LDI  R27,0
0001fe 940e 02db 	CALL _delay_ms
000200 940e 0282 	CALL SUBOPT_0x8
000202 940e 0282 	CALL SUBOPT_0x8
000204 940e 0282 	CALL SUBOPT_0x8
000206 e2a0      	LDI  R26,LOW(32)
000207 df68      	RCALL __lcd_write_nibble_G101
                +
000208 ec88     +LDI R24 , LOW ( 200 )
000209 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00020a 9701     +SBIW R24 , 1
00020b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00020c e2a8      	LDI  R26,LOW(40)
00020d df76      	RCALL __lcd_write_data
00020e e0a4      	LDI  R26,LOW(4)
00020f df74      	RCALL __lcd_write_data
000210 e8a5      	LDI  R26,LOW(133)
000211 df72      	RCALL __lcd_write_data
000212 e0a6      	LDI  R26,LOW(6)
000213 df70      	RCALL __lcd_write_data
000214 df8a      	RCALL _lcd_clear
                 _0x20E0001:
000215 9621      	ADIW R28,1
000216 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
000217 93ba      	ST   -Y,R27
000218 93aa      	ST   -Y,R26
000219 91a9          ld   r26,y+
00021a 91b9          ld   r27,y+
00021b 91e9          ld   r30,y+
00021c 91f9          ld   r31,y+
00021d 9630          adiw r30,0
00021e f42a          brpl __itoa0
00021f 95e0          com  r30
000220 95f0          com  r31
000221 9631          adiw r30,1
000222 e26d          ldi  r22,'-'
000223 936d          st   x+,r22
                 __itoa0:
000224 94e8          clt
000225 e180          ldi  r24,low(10000)
000226 e297          ldi  r25,high(10000)
000227 d00d          rcall __itoa1
000228 ee88          ldi  r24,low(1000)
000229 e093          ldi  r25,high(1000)
00022a d00a          rcall __itoa1
00022b e684          ldi  r24,100
00022c 2799          clr  r25
00022d d007          rcall __itoa1
00022e e08a          ldi  r24,10
00022f d005          rcall __itoa1
000230 2f6e          mov  r22,r30
000231 d010          rcall __itoa5
000232 2766          clr  r22
000233 936c          st   x,r22
000234 9508          ret
                 
                 __itoa1:
000235 2766          clr	 r22
                 __itoa2:
000236 17e8          cp   r30,r24
000237 07f9          cpc  r31,r25
000238 f020          brlo __itoa3
000239 9563          inc  r22
00023a 1be8          sub  r30,r24
00023b 0bf9          sbc  r31,r25
00023c f7c9          brne __itoa2
                 __itoa3:
00023d 2366          tst  r22
00023e f411          brne __itoa4
00023f f016          brts __itoa5
000240 9508          ret
                 __itoa4:
000241 9468          set
                 __itoa5:
000242 5d60          subi r22,-0x30
000243 936d          st   x+,r22
000244 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _bcd2bin:
                 ; .FSTART _bcd2bin
000245 93aa      	ST   -Y,R26
000246 81e8          ld   r30,y
000247 95e2          swap r30
000248 70ef          andi r30,0xf
000249 2fae          mov  r26,r30
00024a 0faa          lsl  r26
00024b 0faa          lsl  r26
00024c 0fea          add  r30,r26
00024d 0fee          lsl  r30
00024e 91a9          ld   r26,y+
00024f 70af          andi r26,0xf
000250 0fea          add  r30,r26
000251 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _s2:
00026e           	.BYTE 0x2
                 _s3:
000270           	.BYTE 0x2
                 _s4:
000272           	.BYTE 0x2
                 _s5:
000274           	.BYTE 0x2
                 _s6:
000276           	.BYTE 0x2
                 __base_y_G101:
000278           	.BYTE 0x4
                 __lcd_y:
00027c           	.BYTE 0x1
                 __lcd_maxx:
00027d           	.BYTE 0x1
                 __seed_G102:
00027e           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000252 940e 01c6 	CALL _lcd_puts
                +
000254 e5a9     +LDI R26 , LOW ( 2 * _0x0 + ( 5 ) )
000255 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW2FN _0x0,5
000256 940c 01d5 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000258 940e 028f 	CALL _i2c_start
00025a eda0      	LDI  R26,LOW(208)
00025b 940c 02c3 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
00025d 940e 02c3 	CALL _i2c_write
00025f 940c 029e 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000261 940e 028f 	CALL _i2c_start
000263 eda1      	LDI  R26,LOW(209)
000264 940e 02c3 	CALL _i2c_write
000266 e0a1      	LDI  R26,LOW(1)
000267 940c 02a8 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000269 2fae      	MOV  R26,R30
00026a 940e 0245 	CALL _bcd2bin
00026c 81a8      	LD   R26,Y
00026d 81b9      	LDD  R27,Y+1
00026e 93ec      	ST   X,R30
00026f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
000270 e0a1      	LDI  R26,LOW(1)
000271 940e 02a8 	CALL _i2c_read
000273 2fae      	MOV  R26,R30
000274 940c 0245 	JMP  _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000276 81aa      	LDD  R26,Y+2
000277 81bb      	LDD  R27,Y+2+1
000278 93ec      	ST   X,R30
000279 e0a0      	LDI  R26,LOW(0)
00027a 940c 02a8 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
00027c 940e 0184 	CALL __lcd_write_data
00027e e0a3      	LDI  R26,LOW(3)
00027f e0b0      	LDI  R27,0
000280 940c 02db 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
000282 e3a0      	LDI  R26,LOW(48)
000283 940e 0170 	CALL __lcd_write_nibble_G101
                +
000285 ec88     +LDI R24 , LOW ( 200 )
000286 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000287 9701     +SBIW R24 , 1
000288 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000289 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __sda_bit=1
                 	.equ __scl_bit=0
                 	.equ __i2c_port=0x15 ;PORTC
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
00028a 98a8      	cbi  __i2c_port,__scl_bit
00028b 98a9      	cbi  __i2c_port,__sda_bit
00028c 9aa0      	sbi  __i2c_dir,__scl_bit
00028d 98a1      	cbi  __i2c_dir,__sda_bit
00028e c015      	rjmp __i2c_delay2
                 _i2c_start:
00028f 98a1      	cbi  __i2c_dir,__sda_bit
000290 98a0      	cbi  __i2c_dir,__scl_bit
000291 27ee      	clr  r30
000292 0000      	nop
000293 9b99      	sbis __i2c_pin,__sda_bit
000294 9508      	ret
000295 9b98      	sbis __i2c_pin,__scl_bit
000296 9508      	ret
000297 d004      	rcall __i2c_delay1
000298 9aa1      	sbi  __i2c_dir,__sda_bit
000299 d002      	rcall __i2c_delay1
00029a 9aa0      	sbi  __i2c_dir,__scl_bit
00029b e0e1      	ldi  r30,1
                 __i2c_delay1:
00029c e06d      	ldi  r22,13
00029d c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00029e 9aa1      	sbi  __i2c_dir,__sda_bit
00029f 9aa0      	sbi  __i2c_dir,__scl_bit
0002a0 d003      	rcall __i2c_delay2
0002a1 98a0      	cbi  __i2c_dir,__scl_bit
0002a2 dff9      	rcall __i2c_delay1
0002a3 98a1      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
0002a4 e16b      	ldi  r22,27
                 __i2c_delay2l:
0002a5 956a      	dec  r22
0002a6 f7f1      	brne __i2c_delay2l
0002a7 9508      	ret
                 _i2c_read:
0002a8 e078      	ldi  r23,8
                 __i2c_read0:
0002a9 98a0      	cbi  __i2c_dir,__scl_bit
0002aa dff1      	rcall __i2c_delay1
                 __i2c_read3:
0002ab 9b98      	sbis __i2c_pin,__scl_bit
0002ac cffe      	rjmp __i2c_read3
0002ad dfee      	rcall __i2c_delay1
0002ae 9488      	clc
0002af 9999      	sbic __i2c_pin,__sda_bit
0002b0 9408      	sec
0002b1 9aa0      	sbi  __i2c_dir,__scl_bit
0002b2 dff1      	rcall __i2c_delay2
0002b3 1fee      	rol  r30
0002b4 957a      	dec  r23
0002b5 f799      	brne __i2c_read0
0002b6 2f7a      	mov  r23,r26
0002b7 2377      	tst  r23
0002b8 f411      	brne __i2c_read1
0002b9 98a1      	cbi  __i2c_dir,__sda_bit
0002ba c001      	rjmp __i2c_read2
                 __i2c_read1:
0002bb 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
0002bc dfdf      	rcall __i2c_delay1
0002bd 98a0      	cbi  __i2c_dir,__scl_bit
0002be dfe5      	rcall __i2c_delay2
0002bf 9aa0      	sbi  __i2c_dir,__scl_bit
0002c0 dfdb      	rcall __i2c_delay1
0002c1 98a1      	cbi  __i2c_dir,__sda_bit
0002c2 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
0002c3 e078      	ldi  r23,8
                 __i2c_write0:
0002c4 0faa      	lsl  r26
0002c5 f410      	brcc __i2c_write1
0002c6 98a1      	cbi  __i2c_dir,__sda_bit
0002c7 c001      	rjmp __i2c_write2
                 __i2c_write1:
0002c8 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
0002c9 dfda      	rcall __i2c_delay2
0002ca 98a0      	cbi  __i2c_dir,__scl_bit
0002cb dfd0      	rcall __i2c_delay1
                 __i2c_write3:
0002cc 9b98      	sbis __i2c_pin,__scl_bit
0002cd cffe      	rjmp __i2c_write3
0002ce dfcd      	rcall __i2c_delay1
0002cf 9aa0      	sbi  __i2c_dir,__scl_bit
0002d0 957a      	dec  r23
0002d1 f791      	brne __i2c_write0
0002d2 98a1      	cbi  __i2c_dir,__sda_bit
0002d3 dfc8      	rcall __i2c_delay1
0002d4 98a0      	cbi  __i2c_dir,__scl_bit
0002d5 dfce      	rcall __i2c_delay2
0002d6 e0e1      	ldi  r30,1
0002d7 9999      	sbic __i2c_pin,__sda_bit
0002d8 27ee      	clr  r30
0002d9 9aa0      	sbi  __i2c_dir,__scl_bit
0002da cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
0002db 9610      	adiw r26,0
0002dc f039      	breq __delay_ms1
                 __delay_ms0:
                +
0002dd ed80     +LDI R24 , LOW ( 0x7D0 )
0002de e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0002df 9701     +SBIW R24 , 1
0002e0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0002e1 95a8      	wdr
0002e2 9711      	sbiw r26,1
0002e3 f7c9      	brne __delay_ms0
                 __delay_ms1:
0002e4 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   1 r5 :   1 r6 :   0 r7 :   1 
r8 :   1 r9 :   1 r10:   4 r11:   1 r12:   2 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   7 r18:   0 r19:   0 r20:   0 r21:   0 r22:  15 r23:   6 
r24:  27 r25:  10 r26:  99 r27:  35 r28:   6 r29:   1 r30: 140 r31:  35 
x  :  12 y  :  96 z  :   9 
Registers used: 24 out of 35 (68.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   3 
adiw  :   9 and   :   0 andi  :   5 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   7 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 
brlt  :   0 brmi  :   0 brne  :  18 brpl  :   1 brsh  :   0 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  46 
cbi   :  20 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :   2 cpc   :   1 cpi   :   6 cpse  :   0 dec   :   8 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  29 ld    :  21 ldd   :  21 ldi   : 104 
lds   :  22 lpm   :   9 lsl   :   4 lsr   :   0 mov   :  18 movw  :   5 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   1 or    :   1 
ori   :   3 out   :  18 pop   :   0 push  :   0 rcall :  49 ret   :  16 
reti  :   0 rjmp  :  19 rol   :   1 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :  16 sbic  :   2 sbis  :   4 sbiw  :   8 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   1 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  60 std   :   7 sts   :   6 sub   :   1 subi  :   5 swap  :   2 
tst   :   2 wdr   :   1 
Instructions used: 55 out of 116 (47.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005ca   1414     68   1482   32768   4.5%
[.dseg] 0x000060 0x000282      0     34     34    2048   1.7%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 13 warnings
