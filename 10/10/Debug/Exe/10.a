;// Saba Razi
;// 99521316
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <stdlib.h>
;
;signed char a = 0;
;
;interrupt [EXT_INT0] void ext_int0_isr(void) {
; 0000 000B interrupt [2] void ext_int0_isr(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000C 	if (PORTC.3 == 0) {
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000D 		a += 1;
;PCODE: $00000012 VOL: 0
; 0000 000E 	}
; 0000 000F 	else {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0010 		a += 10;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0011 	}
;PCODE: $00000018 VOL: 0
; 0000 0012 }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;
;interrupt [EXT_INT1] void ext_int1_isr(void) {
; 0000 0014 interrupt [3] void ext_int1_isr(void) {
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0015 	if (PORTC.3 == 0) {
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0016 		a -= 1;
;PCODE: $00000021 VOL: 0
; 0000 0017 	}
; 0000 0018 	else {
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0019 		a -= 10;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001A 	}
;PCODE: $00000027 VOL: 0
; 0000 001B }
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;
;interrupt [EXT_INT2] void ext_int2_isr(void) {
; 0000 001D interrupt [4] void ext_int2_isr(void) {
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 001E 	PORTC = PORTC ^ (1<<3);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 001F }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;
;void main(void) {
; 0000 0021 void main(void) {
;PCODE: $00000034 VOL: 0
; 0000 0022 	char *str = 0;
; 0000 0023 
; 0000 0024 	PORTC = 0x00;
;	*str -> R16,R17
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0025 	DDRC = 0x08;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0026 
; 0000 0027 	GICR |= 0xE0;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0028     MCUCR = 0x0A;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0029     MCUCSR = 0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 002A     GIFR = 0xE0;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 002B 
; 0000 002C     lcd_init(16);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 002D     #asm("sei")
;PCODE: $00000046 VOL: 0
	sei
;PCODE: $00000047 VOL: 0
; 0000 002E 
; 0000 002F     while (1) {
;PCODE: $00000048 VOL: 0
; 0000 0030         lcd_gotoxy(0, 0);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0031         itoa(a, str);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0032         lcd_puts(str);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0033         lcd_putchar(' ');
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0034         lcd_putchar(' ');
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0035         delay_ms(50);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0036     }
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0037 }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
